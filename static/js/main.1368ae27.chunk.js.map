{"version":3,"sources":["components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","components/SearchBar/SearchBar.jsx","App.jsx","index.jsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","SearchBar","query","filterBy","htmlFor","value","type","id","placeholder","onChange","event","currentTarget","App","useState","setQuery","visibleMovies","preparedMovies","filter","toLowerCase","includes","trim","getPreparedMovies","moviesFromServer","newQuery","ReactDOM","render","document","getElementById"],"mappings":"wuEAEaA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACvB,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBAAKC,IAAKF,EAAMG,OAAQC,IAAI,kBAIhC,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBAAKC,IAAI,wBAAwBE,IAAI,aAIzC,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,YACP,uBACA,mBAAGC,KAAMP,EAAMQ,QAAf,4BCvBKC,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACxB,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAA8BA,MAAOA,GAArBA,EAAMY,cCNfC,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACvB,qBAAKd,UAAU,MAAf,SACE,sBAAKA,UAAU,QAAf,UACE,uBAAOe,QAAQ,eAAef,UAAU,QAAxC,0BAIA,qBAAKA,UAAU,UAAf,SACE,uBACEgB,MAAOH,EACPI,KAAK,OACLC,GAAG,eACHlB,UAAU,QACVmB,YAAY,mBACZC,SAAU,SAACC,GACTP,EAASO,EAAMC,cAAcN,kBCOlC,IAAMO,EAAM,WACjB,MAA0BC,mBAAS,IAAnC,mBAAOX,EAAP,KAAcY,EAAd,KACMC,EAfR,SAA2BjB,EAA3B,GAA+C,IAAVI,EAAS,EAATA,MAC/Bc,EAAiBlB,EASrB,OAPII,IACFc,EAAiBlB,EAAOmB,QACtB,SAAA7B,GAAK,OAAIA,EAAMK,MAAMyB,cAAcC,SAASjB,EAAMkB,OAAOF,gBACpD9B,EAAMM,YAAYwB,cAAcC,SAASjB,EAAMkB,OAAOF,mBAIxDF,EAKeK,CAAkBC,EAAkB,CAAEpB,UAE5D,OACE,sBAAKb,UAAU,OAAf,UACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CACEa,MAAOA,EACPC,SAAU,SAACoB,GACTT,EAASS,MAIb,cAAC,EAAD,CAAYzB,OAAQiB,OAGtB,qBAAK1B,UAAU,UAAf,mCCnCNmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.1368ae27.chunk.js","sourcesContent":["import './MovieCard.scss';\r\n\r\nexport const MovieCard = ({ movie }) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img src={movie.imgUrl} alt=\"Film logo\" />\r\n      </figure>\r\n    </div>\r\n\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img src=\"images/imdb-logo.jpeg\" alt=\"imdb\" />\r\n          </figure>\r\n        </div>\r\n\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{movie.title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {movie.description}\r\n        <br />\r\n        <a href={movie.imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n","import './MoviesList.scss';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({ movies }) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} movie={movie} />\r\n    ))}\r\n  </div>\r\n);\r\n","export const SearchBar = ({ query, filterBy }) => (\n  <div className=\"box\">\n    <div className=\"field\">\n      <label htmlFor=\"search-query\" className=\"label\">\n        Search movie\n      </label>\n\n      <div className=\"control\">\n        <input\n          value={query}\n          type=\"text\"\n          id=\"search-query\"\n          className=\"input\"\n          placeholder=\"Type search word\"\n          onChange={(event) => {\n            filterBy(event.currentTarget.value);\n          }}\n        />\n      </div>\n    </div>\n  </div>\n);\n","import { useState } from 'react';\n\nimport './App.scss';\n\nimport moviesFromServer from './api/movies.json';\n\nimport { MoviesList } from './components/MoviesList';\nimport { SearchBar } from './components/SearchBar/SearchBar';\n\nfunction getPreparedMovies(movies, { query }) {\n  let preparedMovies = movies;\n\n  if (query) {\n    preparedMovies = movies.filter(\n      movie => movie.title.toLowerCase().includes(query.trim().toLowerCase())\n        || movie.description.toLowerCase().includes(query.trim().toLowerCase()),\n    );\n  }\n\n  return preparedMovies;\n}\n\nexport const App = () => {\n  const [query, setQuery] = useState('');\n  const visibleMovies = getPreparedMovies(moviesFromServer, { query });\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <SearchBar\n          query={query}\n          filterBy={(newQuery) => {\n            setQuery(newQuery);\n          }}\n        />\n\n        <MoviesList movies={visibleMovies} />\n      </div>\n\n      <div className=\"sidebar\">\n        Sidebar goes here\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}